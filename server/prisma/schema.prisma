// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//* Solamente mapeo unas tablas de momento, me falta añadirles las relaciones para luego migrar
//* Atte: Mario

model Perfil {
  id          Int    @id
  descripcion String
}

model Usuario {
  id            String        @id //* Corresponde  a la cédula
  nombre        String
  apellido1     String
  apellido2     String
  correo        String //* Email
  username      String
  clave         String //* Contraseña, no sé si usará MD5
  telefono      String
  perfil        String //? ESTO QUÉ ES?
  direccion     String? //* Opcional
  reservaciones Reservacion[]
  meseros       MeseroOnSucursal[]

  @@unique([correo, username, telefono])
}


// Esta tabla no tiene que llamarse algo asi como MeseroSucursal???
// Es que la tabla usuario tiene todos los datos que puede tener un mesero
// y si hacemos otra tabla llamada Mesero ocuparia de igual manera ID, Nombre,
//apellido 1, apellido 2, etc???
// No se si en el modelo ER es correcto o aceptable tener dos tablas separadas que tengan los
// atributos y ya en las clases emplear herencia o no se. 
// Lo que digo es que se incluya mesero en usuario y hacer una tabla intermedia que conecte la tabla usuario y
// y sucursal. Atte: Isaac
model MeseroOnSucursal {
  Sucursal   Sucursal @relation(fields: [idSucursal], references: [id])
  idSucursal BigInt
  Usuario    Usuario @relation(fields: [idMesero], references: [id])
  idMesero   String

   @@id([idSucursal, idMesero])
}

model Sucursal {
  id            BigInt        @id //* Nombre de la sursal
  codigo        String //? Pienso que debería tener código
  nombre        String //? Igualmente un nombre
  ubicacion     String
  capacidad     BigInt
  meseros       MeseroOnSucursal[]
  mesas         Mesa[]
  reservaciones Reservacion[]

  @@unique([codigo, nombre])
}

model Mesa {
  id             BigInt  @id @default(autoincrement()) //* Identity
  codigo         String  @unique
  capacidad      Int
  disponibilidad Boolean //* Reservada o libre, entre otras
  estado         Boolean //* Habilitado o deshabilitado

  Sucursal   Sucursal @relation(fields: [idSucursal], references: [id])
  idSucursal BigInt
}

model Reservacion {
  id         BigInt   @id @default(autoincrement())
  fecha_hora DateTime @default(now())
  Sucursal   Sucursal @relation(fields: [idSucursal], references: [id])
  idSucursal BigInt
  Usuario    Usuario  @relation(fields: [idUsuario], references: [id])
  idUsuario  String
}

model Categoria_Producto {
  id          Int        @id
  descripcion String     @unique
  productos   Producto[]
}

model Producto {
  id                 BigInt             @id
  nombre             String
  descripcion        String
  ingredientes       String? //* Opcional
  precio             Decimal
  imagen             String // agrego esta columna por que es muy importante mostrar que se vende
  estado             Int //* creo que puede tener varios estados... sino cambiar a bool
  Categoria_Producto Categoria_Producto @relation(fields: [idCategoria], references: [id])
  idCategoria        Int
}

model TipoTarjeta {
  id          Int     @id
  descripcion String  @unique
  estado      Boolean //* Habilitada / Deshabilitada
}
