
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.3.1
 * Query Engine version: 694eea289a8462c80264df36757e4fdc129b1b32
 */
Prisma.prismaVersion = {
  client: "4.3.1",
  engine: "694eea289a8462c80264df36757e4fdc129b1b32"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.Categoria_ProductoScalarFieldEnum = makeEnum({
  id: 'id',
  descripcion: 'descripcion'
});

exports.Prisma.DisponibilidadMesaScalarFieldEnum = makeEnum({
  id: 'id',
  descripcion: 'descripcion'
});

exports.Prisma.EstadoPedidoScalarFieldEnum = makeEnum({
  id: 'id',
  descripcion: 'descripcion'
});

exports.Prisma.FacturaEncabezadoTipoPagoScalarFieldEnum = makeEnum({
  idFactura_Encabezado: 'idFactura_Encabezado',
  idTipoPago: 'idTipoPago',
  monto: 'monto'
});

exports.Prisma.Factura_DetalleScalarFieldEnum = makeEnum({
  id: 'id',
  cantidad: 'cantidad',
  precio: 'precio',
  impuesto: 'impuesto',
  total_detalle: 'total_detalle',
  idFactura_Encabezado: 'idFactura_Encabezado',
  idProducto: 'idProducto'
});

exports.Prisma.Factura_EncabezadoScalarFieldEnum = makeEnum({
  id: 'id',
  numero_tarjeta: 'numero_tarjeta',
  tarjeta: 'tarjeta',
  fecha: 'fecha',
  estado: 'estado',
  idUsuario: 'idUsuario'
});

exports.Prisma.MesaScalarFieldEnum = makeEnum({
  id: 'id',
  codigo: 'codigo',
  capacidad: 'capacidad',
  estado: 'estado',
  idSucursal: 'idSucursal',
  idDisponibilidad: 'idDisponibilidad'
});

exports.Prisma.PedidoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  precio: 'precio',
  fecha: 'fecha',
  idEstado: 'idEstado',
  idCliente: 'idCliente',
  idMesero: 'idMesero',
  idSucursal: 'idSucursal',
  idMesa: 'idMesa'
});

exports.Prisma.Pedido_ProductoScalarFieldEnum = makeEnum({
  idPedido: 'idPedido',
  idProducto: 'idProducto',
  cantidad: 'cantidad',
  notas: 'notas'
});

exports.Prisma.PerfilScalarFieldEnum = makeEnum({
  id: 'id',
  descripcion: 'descripcion'
});

exports.Prisma.ProductoScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  ingredientes: 'ingredientes',
  precio: 'precio',
  imagen: 'imagen',
  estado: 'estado',
  idCategoria: 'idCategoria'
});

exports.Prisma.ReservacionScalarFieldEnum = makeEnum({
  id: 'id',
  fecha_hora: 'fecha_hora',
  idSucursal: 'idSucursal',
  idUsuario: 'idUsuario'
});

exports.Prisma.Reservacion_MesaScalarFieldEnum = makeEnum({
  idMesa: 'idMesa',
  idReservacion: 'idReservacion',
  cantidad: 'cantidad'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.SucursalScalarFieldEnum = makeEnum({
  id: 'id',
  codigo: 'codigo',
  nombre: 'nombre',
  ubicacion: 'ubicacion',
  capacidad: 'capacidad'
});

exports.Prisma.TipoPagoScalarFieldEnum = makeEnum({
  id: 'id',
  descripcion: 'descripcion'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = makeEnum({
  id: 'id',
  nombre: 'nombre',
  apellido1: 'apellido1',
  apellido2: 'apellido2',
  correo: 'correo',
  username: 'username',
  clave: 'clave',
  telefono: 'telefono',
  direccion: 'direccion',
  idPerfil: 'idPerfil'
});
exports.TipoTarjeta = makeEnum({
  VISA: 'VISA',
  MASTERCARD: 'MASTERCARD',
  AMERICAN_EXPRESS: 'AMERICAN_EXPRESS',
  JCB: 'JCB',
  DISCOVER: 'DISCOVER',
  NULL: 'NULL'
});

exports.Prisma.ModelName = makeEnum({
  Perfil: 'Perfil',
  Usuario: 'Usuario',
  Sucursal: 'Sucursal',
  Mesa: 'Mesa',
  DisponibilidadMesa: 'DisponibilidadMesa',
  Reservacion: 'Reservacion',
  Reservacion_Mesa: 'Reservacion_Mesa',
  Categoria_Producto: 'Categoria_Producto',
  Producto: 'Producto',
  TipoPago: 'TipoPago',
  Factura_Encabezado: 'Factura_Encabezado',
  Factura_Detalle: 'Factura_Detalle',
  FacturaEncabezadoTipoPago: 'FacturaEncabezadoTipoPago',
  EstadoPedido: 'EstadoPedido',
  Pedido: 'Pedido',
  Pedido_Producto: 'Pedido_Producto'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
